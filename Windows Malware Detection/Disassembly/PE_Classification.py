import csv,os
from PE_Extraction import *
import pandas as pd

# Extract list of the data checked in the dataset
def checked_data():
    os.chdir("Datasets")
    print(os.getcwd())
    with open('API_Functions.csv') as csvFile:
        reader = csv.reader(csvFile,dialect='excel')
        functions_list = next(reader)
        functions_list = list(functions_list)
        del functions_list[0:2]
    
    with open('DLLs_Imported.csv') as csvFile:
        reader = csv.reader(csvFile,dialect='excel')
        dlls_list = next(reader)
        dlls_list = list(dlls_list)
        del dlls_list[0:2]
    
    return functions_list,dlls_list

# compare the data and creating a dict of the function name and 0 or 1 if the function is used like in the dataset  
def compare_functions(exe,pe_functions,imported_functions):
    pe_functions_lower = [pefunction.casefold() for pefunction in pe_functions]
    for function in imported_functions:
        if function.casefold() in pe_functions_lower:
            exe[1][function] = 1
        else:
            exe[1][function] = 0
    
    return exe
# compare the data and creating a dict of the dlls and 0 or 1 if the dlls is used
def compare_DLLs(exe,pe_dlls,imported_dlls):
    pe_dlls_lower = [pedll.casefold() for pedll in pe_dlls]
    for dll in imported_dlls:
        if dll.casefold() in pe_dlls_lower:
            exe[2][dll] = 1
        else:
            exe[2][dll] = 0
    
    return exe

if __name__ == "__main__":
    # get file path and set base
    pe_file_path = "C:\\Users\\USER\\Documents\\Audacity\\audacity.exe"
    name = "audacity.exe"
    api_functions = dict()
    dlls = dict()
    exe = [name,api_functions,dlls]
    
    PE_sections_exctractions(pe_file_path)


    # get imported dlls and functions that the exe uses
    pe_dll_imported,pe_functions,mangled_imports = imported_functions_and_DLLs(pe_file_path)
    imported_functions,dlls_data = checked_data()
    
    # compare the data to the datasets
    compare_functions(exe,pe_functions,imported_functions)
    compare_DLLs(exe,pe_dll_imported,dlls_data)
